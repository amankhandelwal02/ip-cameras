"use strict";
/*
 * ATTENTION: An "eval-source-map" devtool has been used.
 * This devtool is neither made for production nor for readable output files.
 * It uses "eval()" calls to create a separate source file with attached SourceMaps in the browser devtools.
 * If you are trying to read the output file, select a different devtool (https://webpack.js.org/configuration/devtool/)
 * or disable the default devtool with "devtool: false".
 * If you are looking for production-ready output files, see mode: "production" (https://webpack.js.org/configuration/mode/).
 */
self["webpackHotUpdate_N_E"]("pages/index",{

/***/ "./components/cam.js":
/*!***************************!*\
  !*** ./components/cam.js ***!
  \***************************/
/***/ (function(module, __webpack_exports__, __webpack_require__) {

eval(__webpack_require__.ts("__webpack_require__.r(__webpack_exports__);\n/* harmony import */ var react_jsx_dev_runtime__WEBPACK_IMPORTED_MODULE_0__ = __webpack_require__(/*! react/jsx-dev-runtime */ \"./node_modules/react/jsx-dev-runtime.js\");\n/* harmony import */ var react_jsx_dev_runtime__WEBPACK_IMPORTED_MODULE_0___default = /*#__PURE__*/__webpack_require__.n(react_jsx_dev_runtime__WEBPACK_IMPORTED_MODULE_0__);\n/* harmony import */ var react__WEBPACK_IMPORTED_MODULE_1__ = __webpack_require__(/*! react */ \"./node_modules/react/index.js\");\n/* harmony import */ var react__WEBPACK_IMPORTED_MODULE_1___default = /*#__PURE__*/__webpack_require__.n(react__WEBPACK_IMPORTED_MODULE_1__);\n/* harmony import */ var axios__WEBPACK_IMPORTED_MODULE_2__ = __webpack_require__(/*! axios */ \"./node_modules/axios/index.js\");\n\nvar _s = $RefreshSig$();\n\n\nconst Cam = ()=>{\n    _s();\n    const [rtspUrl, setRtspUrl] = (0,react__WEBPACK_IMPORTED_MODULE_1__.useState)(\"\");\n    (0,react__WEBPACK_IMPORTED_MODULE_1__.useEffect)(()=>{\n        const fetchRtspUrl = async ()=>{\n            try {\n                const response = await axios__WEBPACK_IMPORTED_MODULE_2__[\"default\"].get(\"/api/rtsp-url\");\n                const { rtspUrl  } = response.data;\n                setRtspUrl(rtspUrl);\n            } catch (error) {\n                console.error(\"Failed to fetch RTSP URL:\", error);\n            }\n        };\n        fetchRtspUrl();\n    }, []);\n    console.log(\"rtsppp\", rtspUrl);\n    return /*#__PURE__*/ (0,react_jsx_dev_runtime__WEBPACK_IMPORTED_MODULE_0__.jsxDEV)(\"div\", {\n        children: [\n            /*#__PURE__*/ (0,react_jsx_dev_runtime__WEBPACK_IMPORTED_MODULE_0__.jsxDEV)(\"h1\", {\n                children: \"Stream Viewer\"\n            }, void 0, false, {\n                fileName: \"/Users/ezeejain/Desktop/Lens_View/camera/ip-cameras/components/cam.js\",\n                lineNumber: 23,\n                columnNumber: 7\n            }, undefined),\n            rtspUrl && /*#__PURE__*/ (0,react_jsx_dev_runtime__WEBPACK_IMPORTED_MODULE_0__.jsxDEV)(\"video\", {\n                src: \"rtsp://localhost:8554/live/stream\",\n                controls: true,\n                autoPlay: true\n            }, void 0, false, {\n                fileName: \"/Users/ezeejain/Desktop/Lens_View/camera/ip-cameras/components/cam.js\",\n                lineNumber: 24,\n                columnNumber: 19\n            }, undefined)\n        ]\n    }, void 0, true, {\n        fileName: \"/Users/ezeejain/Desktop/Lens_View/camera/ip-cameras/components/cam.js\",\n        lineNumber: 22,\n        columnNumber: 5\n    }, undefined);\n};\n_s(Cam, \"u6x7Jk8a18GY6PoV26zBXI83jhQ=\");\n_c = Cam;\n/* harmony default export */ __webpack_exports__[\"default\"] = (Cam); // import React, { useState, useEffect } from \"react\";\n // import axios from \"axios\";\n // const Cam = () => {\n //   const [rtspUrl, setRtspUrl] = useState(\"\");\n //   useEffect(() => {\n //     axios.get(\"/api/rtsp-url\")\n //       .then(response => {\n //         const { rtspUrl } = response.data;\n //         setRtspUrl(rtspUrl);\n //       })\n //       .catch(error => {\n //         console.error(\"Failed to fetch RTSP URL:\", error);\n //       });\n //   }, []);\n // console.log(\"rtspurl\",rtspUrl)\n //   return (\n //     <div>\n //       <h1>Stream Viewer</h1>\n //        <video src={rtspUrl} controls autoPlay />\n //     </div>\n //   );\n // };\n // export default Cam;\n // import { useEffect, useRef } from \"react\";\n // const Cam = () => {\n //   const videoRef = useRef(null);\n //   useEffect(() => {\n //     const videoElement = videoRef.current;\n //     const startStream = async () => {\n //       try {\n //         const stream = await navigator.mediaDevices.getUserMedia({ video: true });\n //         videoElement.srcObject = stream;\n //       } catch (error) {\n //         console.error(\"Error accessing media devices:\", error);\n //       }\n //     };\n //     startStream();\n //     return () => {\n //       if (videoElement.srcObject) {\n //         const stream = videoElement.srcObject;\n //         const tracks = stream.getTracks();\n //         tracks.forEach((track) => {\n //           track.stop();\n //         });\n //       }\n //     };\n //   }, []);\n //   return (\n //     <div>\n //       <h1>Live Stream</h1>\n //       <video ref={videoRef} autoPlay></video>\n //     </div>\n //   );\n // };\n // export default Cam;\n // import { useEffect, useRef } from 'react';\n // const Cam = () => {\n // const videoRef = useRef(null);\n // console.log(\"00000000000000\")\n // useEffect(() => {\n //   console.log(\"aaaaaaaaa\")\n //   const videoElement = videoRef.current;\n //   // Set the source of the video element to the RTSP URL\n //   videoElement.src = \"rtsp://localhost:8554/live/stream\";\n // console.log(\"bbbbbbbbb\",videoElement)\n //   // Load and play the video\n //   videoElement.load();\n //   videoElement.play();\n //   console.log(\"cccccccc\")\n //   return () => {\n //     // Cleanup: Stop the video and remove the source\n //     videoElement.pause();\n //     videoElement.removeAttribute(\"src\");\n //     videoElement.load();\n //     console.log(\"dddddddd\")\n //   };\n // }, []);\n // return (\n //   <div>\n //     <video ref={videoRef} controls autoPlay />\n //   </div>\n // );\n // };\n // export default Cam;\n // import React, { useState, useEffect } from 'react';\n // const Cam = () => {\n //   const [videoKey, setVideoKey] = useState(0);\n //   const [lastModified, setLastModified] = useState('');\n //   const handleVideoUpdate = () => {\n //     setVideoKey(prevKey => prevKey + 1);\n //   };\n //   useEffect(() => {\n //     const pollInterval = setInterval(() => {\n //       fetch('/api/video-timestamp')\n //         .then(response => response.text())\n //         .then(timestamp => {\n //           if (timestamp !== lastModified) {\n //             setLastModified(timestamp);\n //             handleVideoUpdate();\n //           }\n //         })\n //         .catch(error => {\n //           console.error('Error fetching video timestamp:', error);\n //         });\n //     }, 5000); // Poll every 5 seconds (adjust the interval as needed)\n //     return () => {\n //       clearInterval(pollInterval);\n //     };\n //   }, [lastModified]);\n //   return (\n //     <div>\n //       <video key={videoKey} controls autoPlay>\n //         <source src={`/api/stream?${Date.now()}`} type=\"video/mp4\" />\n //         Your browser does not support the video tag.\n //       </video>\n //     </div>\n //   );\n // };\n // export default Cam;\n // import Script from 'next/script';\n // import { useEffect, useRef } from 'react';\n // const Cam = () => {\n //   const videoRef = useRef(null);\n //   useEffect(() => {\n //     const videoElement = videoRef.current;\n //     // Set the source of the video element to the RTSP stream URL\n //     videoElement.src = `rtsp://localhost:8554/stream`;\n //     videoElement.play();\n //     return () => {\n //       videoElement.src = '';\n //     };\n //   }, []);\n //   return (\n //     <div>\n //       <h1>RTSP Stream</h1>\n //       <video ref={videoRef} controls style={{ width: '100%' }} />\n //       <Script src=\"https://cdn.jsdelivr.net/npm/hls.js@latest\" strategy=\"lazyOnload\" />\n //     </div>\n //   );\n // };\n // export default Cam;\n // import { useEffect, useRef } from 'react';\n // import Hls from 'hls.js';\n // const Cam = () => {\n //   const videoRef = useRef(null);\n //   useEffect(() => {\n //     const videoElement = videoRef.current;\n //     if (Hls.isSupported()) {\n //       const hls = new Hls();\n //       hls.loadSource('http://localhost:8000/hls/stream.m3u8');\n //       hls.attachMedia(videoElement);\n //       hls.on(Hls.Events.MANIFEST_PARSED, () => {\n //         videoElement.play();\n //       });\n //     }\n //     return () => {\n //       if (Hls.isSupported()) {\n //         const hls = new Hls();\n //         hls.detachMedia(videoElement);\n //         hls.destroy();\n //       }\n //     };\n //   }, []);\n //   return (\n //     <div>\n //       <h1>RTSP Stream</h1>\n //       <video ref={videoRef} controls style={{ width: '100%' }} />\n //     </div>\n //   );\n // };\n // export default Cam;\nvar _c;\n$RefreshReg$(_c, \"Cam\");\n\n\n;\n    // Wrapped in an IIFE to avoid polluting the global scope\n    ;\n    (function () {\n        var _a, _b;\n        // Legacy CSS implementations will `eval` browser code in a Node.js context\n        // to extract CSS. For backwards compatibility, we need to check we're in a\n        // browser context before continuing.\n        if (typeof self !== 'undefined' &&\n            // AMP / No-JS mode does not inject these helpers:\n            '$RefreshHelpers$' in self) {\n            // @ts-ignore __webpack_module__ is global\n            var currentExports = module.exports;\n            // @ts-ignore __webpack_module__ is global\n            var prevExports = (_b = (_a = module.hot.data) === null || _a === void 0 ? void 0 : _a.prevExports) !== null && _b !== void 0 ? _b : null;\n            // This cannot happen in MainTemplate because the exports mismatch between\n            // templating and execution.\n            self.$RefreshHelpers$.registerExportsForReactRefresh(currentExports, module.id);\n            // A module can be accepted automatically based on its exports, e.g. when\n            // it is a Refresh Boundary.\n            if (self.$RefreshHelpers$.isReactRefreshBoundary(currentExports)) {\n                // Save the previous exports on update so we can compare the boundary\n                // signatures.\n                module.hot.dispose(function (data) {\n                    data.prevExports = currentExports;\n                });\n                // Unconditionally accept an update to this module, we'll check if it's\n                // still a Refresh Boundary later.\n                // @ts-ignore importMeta is replaced in the loader\n                module.hot.accept();\n                // This field is set when the previous version of this module was a\n                // Refresh Boundary, letting us know we need to check for invalidation or\n                // enqueue an update.\n                if (prevExports !== null) {\n                    // A boundary can become ineligible if its exports are incompatible\n                    // with the previous exports.\n                    //\n                    // For example, if you add/remove/change exports, we'll want to\n                    // re-execute the importing modules, and force those components to\n                    // re-render. Similarly, if you convert a class component to a\n                    // function, we want to invalidate the boundary.\n                    if (self.$RefreshHelpers$.shouldInvalidateReactRefreshBoundary(prevExports, currentExports)) {\n                        module.hot.invalidate();\n                    }\n                    else {\n                        self.$RefreshHelpers$.scheduleUpdate();\n                    }\n                }\n            }\n            else {\n                // Since we just executed the code for the module, it's possible that the\n                // new exports made it ineligible for being a boundary.\n                // We only care about the case when we were _previously_ a boundary,\n                // because we already accepted this update (accidental side effect).\n                var isNoLongerABoundary = prevExports !== null;\n                if (isNoLongerABoundary) {\n                    module.hot.invalidate();\n                }\n            }\n        }\n    })();\n//# sourceURL=[module]\n//# sourceMappingURL=data:application/json;charset=utf-8;base64,\n//# sourceURL=webpack-internal:///./components/cam.js\n"));

/***/ })

});